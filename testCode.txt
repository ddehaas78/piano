<!DOCTYPE html>
<html>
    <head>
        <title>Piano</title>
        <meta charset="utf-8">
        <link rel="stylesheet" href="piano.css">
        <script src="piano.js"></script>
    </head>
    <body>
        <div id='piano'>
            <div id='do' class='becarre'>do</div>
            <div id='re' class='becarre'>ré</div>
            <div id='mi' class='becarre'>mi</div>
            <div id='fa' class='becarre'>fa</div>
            <div id='sol' class='becarre'>sol</div>
            <div id='la' class='becarre'>la</div>
            <div id='si' class='becarre'>si</div>
            
            <div id='do-diese' class='diese' style="color: white;">do#</div>
            <div id='re-diese' class='diese' style="color: white;">ré#</div>
            <div id='fa-diese' class='diese' style="color: white;">fa#</div>
            <div id='sol-diese' class='diese' style="color: white;">sol#</div>
            <div id='la-diese' class='diese' style="color: white;">la#</div>
            <div class="place_container">
            
        </div>
    </body>
</html>








body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
}

#piano {
    width: 700px;
    position: relative;
    display: flex;
    justify-content: flex-start;
    height: 400px;
}

.becarre {
    width: 99px;
    height: 400px;
    border: 1px solid black;
    background-color: white;
    z-index: 1;
    display: flex;
    justify-content: center;
    transition: all 0.1s ease;
}

.becarre:hover, .diese:hover {
    background-color: orange;
}

.becarre:active, .diese:active {
    background-color: red;
}

.becarre.pressed, .diese.pressed {
    transform: scale(0.95);
    background-color: #ddd;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3);
}

.diese {
    width: 60px;
    height: 250px;
    background-color: black;
    position: absolute;
    top: 0;
    z-index: 2;
    display: flex;
    justify-content: center;
    transition: all 0.1s ease;
}

#do-diese {
    left: calc(1 * 99px - 30px);
}
#re-diese {
    left: calc(2 * 100px - 30px);
}
#fa-diese {
    left: calc(4 * 100px - 30px);
}
#sol-diese {
    left: calc(5 * 100px - 30px);
}
#la-diese {
    left: calc(6 * 100px - 30px);
}







// Object mapping the keys to their sound files
const soundMap = {
    'do': 'sounds/do.wav',
    're': 'sounds/re.wav',
    'mi': 'sounds/mi.wav',
    'fa': 'sounds/fa.wav',
    'sol': 'sounds/sol.wav',
    'la': 'sounds/la.wav',
    'si': 'sounds/si.wav',
    'do-diese': 'sounds/dos.wav',
    're-diese': 'sounds/res.wav',
    'fa-diese': 'sounds/fas.wav',
    'sol-diese': 'sounds/sols.wav',
    'la-diese': 'sounds/las.wav',
};

// Function to play sound when key is pressed
function playSound(key) {
    const audio = new Audio(soundMap[key]);
    audio.play();
}

// Function to handle key press animation
function handleKeyPressAnimation(keyElement) {
    keyElement.classList.add('pressed');
    setTimeout(() => {
        keyElement.classList.remove('pressed');
    }, 150); // 150ms duration for the press effect
}

// Add event listeners to white keys (click events)
document.querySelectorAll('.becarre').forEach(key => {
    key.addEventListener('click', () => {
        playSound(key.id);
        handleKeyPressAnimation(key); // Animate when white key is clicked
    });
});

// Add event listeners to black keys (click events)
document.querySelectorAll('.diese').forEach(key => {
    key.addEventListener('click', () => {
        playSound(key.id);
        handleKeyPressAnimation(key); // Animate when black key is clicked
    });
});

// Optionally, handle keyboard input (key press events)
document.addEventListener('keydown', (event) => {
    let keyPressed;
    switch (event.key) {
        case 'q': keyPressed = 'do'; break;
        case 'z': keyPressed = 'do-diese'; break;
        case 's': keyPressed = 're'; break;
        case 'e': keyPressed = 're-diese'; break;
        case 'd': keyPressed = 'mi'; break;
        case 'f': keyPressed = 'fa'; break;
        case 't': keyPressed = 'fa-diese'; break;
        case 'g': keyPressed = 'sol'; break;
        case 'y': keyPressed = 'sol-diese'; break;
        case 'h': keyPressed = 'la'; break;
        case 'u': keyPressed = 'la-diese'; break;
        case 'j': keyPressed = 'si'; break;
        default: return; // Ignore other keys
    }

    // Get the corresponding key element and apply animation
    const keyElement = document.getElementById(keyPressed);
    if (keyElement) {
        playSound(keyPressed);
        handleKeyPressAnimation(keyElement); // Animate the key press
    }
});
